{
  "contractName": "YourContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "greetingSetter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newGreeting",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "premium",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GreetingChange",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "greeting",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "premium",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newGreeting",
          "type": "string"
        }
      ],
      "name": "setGreeting",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userGreetingCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x60a06040526040518060400160405280601c81526020017f4275696c64696e6720556e73746f707061626c652041707073212121000000008152505f908162000049919062000352565b505f60015f6101000a81548160ff0219169083151502179055505f60025534801562000073575f80fd5b50d3801562000080575f80fd5b50d280156200008d575f80fd5b5060405162001442380380620014428339818101604052810190620000b39190620004c8565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620004f8565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200016a57607f821691505b60208210810362000180576200017f62000125565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620001e47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a7565b620001f08683620001a7565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200023a620002346200022e8462000208565b62000211565b62000208565b9050919050565b5f819050919050565b62000255836200021a565b6200026d620002648262000241565b848454620001b3565b825550505050565b5f90565b6200028362000275565b620002908184846200024a565b505050565b5b81811015620002b757620002ab5f8262000279565b60018101905062000296565b5050565b601f8211156200030657620002d08162000186565b620002db8462000198565b81016020851015620002eb578190505b62000303620002fa8562000198565b83018262000295565b50505b505050565b5f82821c905092915050565b5f620003285f19846008026200030b565b1980831691505092915050565b5f62000342838362000317565b9150826002028217905092915050565b6200035d82620000ee565b67ffffffffffffffff811115620003795762000378620000f8565b5b62000385825462000152565b62000392828285620002bb565b5f60209050601f831160018114620003c8575f8415620003b3578287015190505b620003bf858262000335565b8655506200042e565b601f198416620003d88662000186565b5f5b828110156200040157848901518255600182019150602085019450602081019050620003da565b868310156200042157848901516200041d601f89168262000317565b8355505b6001600288020188555050505b505050505050565b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b62000465816200043a565b811462000470575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200049e8262000473565b9050919050565b5f81519050620004b5816200045a565b620004c08162000492565b905092915050565b5f60208284031215620004e057620004df62000436565b5b5f620004ef84828501620004a5565b91505092915050565b608051610f236200051f5f395f8181610226015281816102b5015261037f0152610f235ff3fe608060405260043610610073575f3560e01c8063a41368621161004d578063a413686214610130578063cea49c3c1461014c578063e0a73a93146101a0578063ef690cc0146101e25761007a565b80633ccfd60b1461007e5780638da5cb5b146100ac57806397feba9d146100ee5761007a565b3661007a57005b5f80fd5b348015610089575f80fd5b50d38015610095575f80fd5b50d280156100a1575f80fd5b506100aa610224565b005b3480156100b7575f80fd5b50d380156100c3575f80fd5b50d280156100cf575f80fd5b506100d861037d565b6040516100e591906106bb565b60405180910390f35b3480156100f9575f80fd5b50d38015610105575f80fd5b50d28015610111575f80fd5b5061011a6103a1565b60405161012791906106ec565b60405180910390f35b61014a60048036038101906101459190610852565b6103a7565b005b348015610157575f80fd5b50d38015610163575f80fd5b50d2801561016f575f80fd5b5061018a600480360381019061018591906108ee565b6104dd565b60405161019791906106ec565b60405180910390f35b3480156101ab575f80fd5b50d380156101b7575f80fd5b50d280156101c3575f80fd5b506101cc6104f2565b6040516101d99190610933565b60405180910390f35b3480156101ed575f80fd5b50d380156101f9575f80fd5b50d28015610205575f80fd5b5061020e610504565b60405161021b91906109c6565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a990610a30565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516102f790610a7b565b5f6040518083038185875af1925050503d805f8114610331576040519150601f19603f3d011682016040523d82523d5f602084013e610336565b606091505b505090508061037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190610ad9565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b6103ca604051806060016040528060218152602001610ecd60219139823361058f565b805f90816103d89190610cf1565b50600160025f8282546103eb9190610ded565b92505081905550600160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461043f9190610ded565b925050819055505f34111561046c576001805f6101000a81548160ff021916908315150217905550610486565b5f60015f6101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff167f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad825f3411346040516104d293929190610e20565b60405180910390a250565b6003602052805f5260405f205f915090505481565b60015f9054906101000a900460ff1681565b5f805461051090610b24565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90610b24565b80156105875780601f1061055e57610100808354040283529160200191610587565b820191905f5260205f20905b81548152906001019060200180831161056a57829003601f168201915b505050505081565b6106298383836040516024016105a793929190610e5c565b6040516020818303038152906040527f95ed0195000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061062e565b505050565b6106458161063d610648610667565b63ffffffff16565b50565b5f6a636f6e736f6c652e6c6f6790505f80835160208501845afa505050565b610672819050919050565b61067a610e9f565b565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106a58261067c565b9050919050565b6106b58161069b565b82525050565b5f6020820190506106ce5f8301846106ac565b92915050565b5f819050919050565b6106e6816106d4565b82525050565b5f6020820190506106ff5f8301846106dd565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6107648261071e565b810181811067ffffffffffffffff821117156107835761078261072e565b5b80604052505050565b5f610795610705565b90506107a1828261075b565b919050565b5f67ffffffffffffffff8211156107c0576107bf61072e565b5b6107c98261071e565b9050602081019050919050565b828183375f83830152505050565b5f6107f66107f1846107a6565b61078c565b9050828152602081018484840111156108125761081161071a565b5b61081d8482856107d6565b509392505050565b5f82601f83011261083957610838610716565b5b81356108498482602086016107e4565b91505092915050565b5f602082840312156108675761086661070e565b5b5f82013567ffffffffffffffff81111561088457610883610712565b5b61089084828501610825565b91505092915050565b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6108c281610899565b81146108cc575f80fd5b50565b5f813590506108dd816108b9565b6108e68161069b565b905092915050565b5f602082840312156109035761090261070e565b5b5f610910848285016108cf565b91505092915050565b5f8115159050919050565b61092d81610919565b82525050565b5f6020820190506109465f830184610924565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610983578082015181840152602081019050610968565b5f8484015250505050565b5f6109988261094c565b6109a28185610956565b93506109b2818560208601610966565b6109bb8161071e565b840191505092915050565b5f6020820190508181035f8301526109de818461098e565b905092915050565b7f4e6f7420746865204f776e6572000000000000000000000000000000000000005f82015250565b5f610a1a600d83610956565b9150610a25826109e6565b602082019050919050565b5f6020820190508181035f830152610a4781610a0e565b9050919050565b5f81905092915050565b50565b5f610a665f83610a4e565b9150610a7182610a58565b5f82019050919050565b5f610a8582610a5b565b9150819050919050565b7f4661696c656420746f2073656e642045746865720000000000000000000000005f82015250565b5f610ac3601483610956565b9150610ace82610a8f565b602082019050919050565b5f6020820190508181035f830152610af081610ab7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610b3b57607f821691505b602082108103610b4e57610b4d610af7565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610bb07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b75565b610bba8683610b75565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610bf5610bf0610beb846106d4565b610bd2565b6106d4565b9050919050565b5f819050919050565b610c0e83610bdb565b610c22610c1a82610bfc565b848454610b81565b825550505050565b5f90565b610c36610c2a565b610c41818484610c05565b505050565b5b81811015610c6457610c595f82610c2e565b600181019050610c47565b5050565b601f821115610ca957610c7a81610b54565b610c8384610b66565b81016020851015610c92578190505b610ca6610c9e85610b66565b830182610c46565b50505b505050565b5f82821c905092915050565b5f610cc95f1984600802610cae565b1980831691505092915050565b5f610ce18383610cba565b9150826002028217905092915050565b610cfa8261094c565b67ffffffffffffffff811115610d1357610d1261072e565b5b610d1d8254610b24565b610d28828285610c68565b5f60209050601f831160018114610d59575f8415610d47578287015190505b610d518582610cd6565b865550610db8565b601f198416610d6786610b54565b5f5b82811015610d8e57848901518255600182019150602085019450602081019050610d69565b86831015610dab5784890151610da7601f891682610cba565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610df7826106d4565b9150610e02836106d4565b9250828201905080821115610e1a57610e19610dc0565b5b92915050565b5f6060820190508181035f830152610e38818661098e565b9050610e476020830185610924565b610e5460408301846106dd565b949350505050565b5f6060820190508181035f830152610e74818661098e565b90508181036020830152610e88818561098e565b9050610e9760408301846106ac565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52605160045260245ffdfe53657474696e67206e6577206772656574696e6720272573272066726f6d202573a26474726f6e5822122003dc8e989b67e0d6908caa57162b8e8a3940555e8ddff4cfd973220339bcf36464736f6c63430008140033",
  "deployedBytecode": "0x608060405260043610610073575f3560e01c8063a41368621161004d578063a413686214610130578063cea49c3c1461014c578063e0a73a93146101a0578063ef690cc0146101e25761007a565b80633ccfd60b1461007e5780638da5cb5b146100ac57806397feba9d146100ee5761007a565b3661007a57005b5f80fd5b348015610089575f80fd5b50d38015610095575f80fd5b50d280156100a1575f80fd5b506100aa610224565b005b3480156100b7575f80fd5b50d380156100c3575f80fd5b50d280156100cf575f80fd5b506100d861037d565b6040516100e591906106bb565b60405180910390f35b3480156100f9575f80fd5b50d38015610105575f80fd5b50d28015610111575f80fd5b5061011a6103a1565b60405161012791906106ec565b60405180910390f35b61014a60048036038101906101459190610852565b6103a7565b005b348015610157575f80fd5b50d38015610163575f80fd5b50d2801561016f575f80fd5b5061018a600480360381019061018591906108ee565b6104dd565b60405161019791906106ec565b60405180910390f35b3480156101ab575f80fd5b50d380156101b7575f80fd5b50d280156101c3575f80fd5b506101cc6104f2565b6040516101d99190610933565b60405180910390f35b3480156101ed575f80fd5b50d380156101f9575f80fd5b50d28015610205575f80fd5b5061020e610504565b60405161021b91906109c6565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a990610a30565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516102f790610a7b565b5f6040518083038185875af1925050503d805f8114610331576040519150601f19603f3d011682016040523d82523d5f602084013e610336565b606091505b505090508061037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190610ad9565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b6103ca604051806060016040528060218152602001610ecd60219139823361058f565b805f90816103d89190610cf1565b50600160025f8282546103eb9190610ded565b92505081905550600160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461043f9190610ded565b925050819055505f34111561046c576001805f6101000a81548160ff021916908315150217905550610486565b5f60015f6101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff167f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad825f3411346040516104d293929190610e20565b60405180910390a250565b6003602052805f5260405f205f915090505481565b60015f9054906101000a900460ff1681565b5f805461051090610b24565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90610b24565b80156105875780601f1061055e57610100808354040283529160200191610587565b820191905f5260205f20905b81548152906001019060200180831161056a57829003601f168201915b505050505081565b6106298383836040516024016105a793929190610e5c565b6040516020818303038152906040527f95ed0195000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061062e565b505050565b6106458161063d610648610667565b63ffffffff16565b50565b5f6a636f6e736f6c652e6c6f6790505f80835160208501845afa505050565b610672819050919050565b61067a610e9f565b565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106a58261067c565b9050919050565b6106b58161069b565b82525050565b5f6020820190506106ce5f8301846106ac565b92915050565b5f819050919050565b6106e6816106d4565b82525050565b5f6020820190506106ff5f8301846106dd565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6107648261071e565b810181811067ffffffffffffffff821117156107835761078261072e565b5b80604052505050565b5f610795610705565b90506107a1828261075b565b919050565b5f67ffffffffffffffff8211156107c0576107bf61072e565b5b6107c98261071e565b9050602081019050919050565b828183375f83830152505050565b5f6107f66107f1846107a6565b61078c565b9050828152602081018484840111156108125761081161071a565b5b61081d8482856107d6565b509392505050565b5f82601f83011261083957610838610716565b5b81356108498482602086016107e4565b91505092915050565b5f602082840312156108675761086661070e565b5b5f82013567ffffffffffffffff81111561088457610883610712565b5b61089084828501610825565b91505092915050565b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6108c281610899565b81146108cc575f80fd5b50565b5f813590506108dd816108b9565b6108e68161069b565b905092915050565b5f602082840312156109035761090261070e565b5b5f610910848285016108cf565b91505092915050565b5f8115159050919050565b61092d81610919565b82525050565b5f6020820190506109465f830184610924565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610983578082015181840152602081019050610968565b5f8484015250505050565b5f6109988261094c565b6109a28185610956565b93506109b2818560208601610966565b6109bb8161071e565b840191505092915050565b5f6020820190508181035f8301526109de818461098e565b905092915050565b7f4e6f7420746865204f776e6572000000000000000000000000000000000000005f82015250565b5f610a1a600d83610956565b9150610a25826109e6565b602082019050919050565b5f6020820190508181035f830152610a4781610a0e565b9050919050565b5f81905092915050565b50565b5f610a665f83610a4e565b9150610a7182610a58565b5f82019050919050565b5f610a8582610a5b565b9150819050919050565b7f4661696c656420746f2073656e642045746865720000000000000000000000005f82015250565b5f610ac3601483610956565b9150610ace82610a8f565b602082019050919050565b5f6020820190508181035f830152610af081610ab7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610b3b57607f821691505b602082108103610b4e57610b4d610af7565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610bb07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b75565b610bba8683610b75565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610bf5610bf0610beb846106d4565b610bd2565b6106d4565b9050919050565b5f819050919050565b610c0e83610bdb565b610c22610c1a82610bfc565b848454610b81565b825550505050565b5f90565b610c36610c2a565b610c41818484610c05565b505050565b5b81811015610c6457610c595f82610c2e565b600181019050610c47565b5050565b601f821115610ca957610c7a81610b54565b610c8384610b66565b81016020851015610c92578190505b610ca6610c9e85610b66565b830182610c46565b50505b505050565b5f82821c905092915050565b5f610cc95f1984600802610cae565b1980831691505092915050565b5f610ce18383610cba565b9150826002028217905092915050565b610cfa8261094c565b67ffffffffffffffff811115610d1357610d1261072e565b5b610d1d8254610b24565b610d28828285610c68565b5f60209050601f831160018114610d59575f8415610d47578287015190505b610d518582610cd6565b865550610db8565b601f198416610d6786610b54565b5f5b82811015610d8e57848901518255600182019150602085019450602081019050610d69565b86831015610dab5784890151610da7601f891682610cba565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610df7826106d4565b9150610e02836106d4565b9250828201905080821115610e1a57610e19610dc0565b5b92915050565b5f6060820190508181035f830152610e38818661098e565b9050610e476020830185610924565b610e5460408301846106dd565b949350505050565b5f6060820190508181035f830152610e74818661098e565b90508181036020830152610e88818561098e565b9050610e9760408301846106ac565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52605160045260245ffdfe53657474696e67206e6577206772656574696e6720272573272066726f6d202573a26474726f6e5822122003dc8e989b67e0d6908caa57162b8e8a3940555e8ddff4cfd973220339bcf36464736f6c63430008140033",
  "sourceMap": "495:2476:1:-:0;;;582:55;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;665:5;643:27;;;;;;;;;;;;;;;;;;;;706:1;676:31;;1106:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1152:6;1144:14;;;;;;;;;;1106:59;495:2476;;7:99:3;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5315:117::-;5424:1;5421;5414:12;5561:128;5598:7;5638:44;5631:5;5627:56;5616:67;;5561:128;;;:::o;5695:122::-;5768:24;5786:5;5768:24;:::i;:::-;5761:5;5758:35;5748:63;;5807:1;5804;5797:12;5748:63;5695:122;:::o;5823:126::-;5860:7;5900:42;5893:5;5889:54;5878:65;;5823:126;;;:::o;5955:96::-;5992:7;6021:24;6039:5;6021:24;:::i;:::-;6010:35;;5955:96;;;:::o;6057:185::-;6114:5;6145:6;6139:13;6130:22;;6161:33;6188:5;6161:33;:::i;:::-;6212:24;6230:5;6212:24;:::i;:::-;6203:33;;6057:185;;;;:::o;6248:351::-;6318:6;6367:2;6355:9;6346:7;6342:23;6338:32;6335:119;;;6373:79;;:::i;:::-;6335:119;6493:1;6518:64;6574:7;6565:6;6554:9;6550:22;6518:64;:::i;:::-;6508:74;;6464:128;6248:351;;;;:::o;495:2476:1:-;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "495:2476:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;546:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1746:744;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;713:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;643:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;582:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2695:167;1477:5;1463:19;;:10;:19;;;1455:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2741:12:::1;2759:5;:10;;2778:21;2759:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2740:65;;;2823:7;2815:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;2730:132;2695:167::o:0;546:30::-;;;:::o;676:31::-;;;;:::o;1746:744::-;1913:74;;;;;;;;;;;;;;;;;;1962:12;1976:10;1913:11;:74::i;:::-;2043:12;2032:8;:23;;;;;;:::i;:::-;;2081:1;2065:12;;:17;;;;;;;:::i;:::-;;;;;;;;2127:1;2092:19;:31;2112:10;2092:31;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2264:1;2252:9;:13;2248:104;;;2291:4;2281:7;;:14;;;;;;;;;;;;;;;;;;2248:104;;;2336:5;2326:7;;:15;;;;;;;;;;;;;;;;;;2248:104;2432:10;2417:66;;;2444:12;2470:1;2458:9;:13;2473:9;2417:66;;;;;;;;:::i;:::-;;;;;;;;1746:744;:::o;713:51::-;;;;;;;;;;;;;;;;;:::o;643:27::-;;;;;;;;;;;;;:::o;582:55::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12714:174:2:-;12799:82;12869:2;12873;12877;12815:65;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12799:15;:82::i;:::-;12714:174;;;:::o;851:129::-;922:51;965:7;922:42;934:29;922:11;:42::i;:::-;:51;;:::i;:::-;851:129;:::o;180:463::-;265:22;131:42;265:40;;594:1;571;541:7;535:14;510:2;501:7;497:16;461:14;434:5;402:211;381:246;367:270;180:463;:::o;649:196::-;748:33;825:4;816:13;;649:196;;;:::o;-1:-1:-1:-;;;:::i;:::-;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:75::-;1061:6;1094:2;1088:9;1078:19;;1028:75;:::o;1109:117::-;1218:1;1215;1208:12;1232:117;1341:1;1338;1331:12;1355:117;1464:1;1461;1454:12;1478:117;1587:1;1584;1577:12;1601:102;1642:6;1693:2;1689:7;1684:2;1677:5;1673:14;1669:28;1659:38;;1601:102;;;:::o;1709:180::-;1757:77;1754:1;1747:88;1854:4;1851:1;1844:15;1878:4;1875:1;1868:15;1895:281;1978:27;2000:4;1978:27;:::i;:::-;1970:6;1966:40;2108:6;2096:10;2093:22;2072:18;2060:10;2057:34;2054:62;2051:88;;;2119:18;;:::i;:::-;2051:88;2159:10;2155:2;2148:22;1938:238;1895:281;;:::o;2182:129::-;2216:6;2243:20;;:::i;:::-;2233:30;;2272:33;2300:4;2292:6;2272:33;:::i;:::-;2182:129;;;:::o;2317:308::-;2379:4;2469:18;2461:6;2458:30;2455:56;;;2491:18;;:::i;:::-;2455:56;2529:29;2551:6;2529:29;:::i;:::-;2521:37;;2613:4;2607;2603:15;2595:23;;2317:308;;;:::o;2631:146::-;2728:6;2723:3;2718;2705:30;2769:1;2760:6;2755:3;2751:16;2744:27;2631:146;;;:::o;2783:425::-;2861:5;2886:66;2902:49;2944:6;2902:49;:::i;:::-;2886:66;:::i;:::-;2877:75;;2975:6;2968:5;2961:21;3013:4;3006:5;3002:16;3051:3;3042:6;3037:3;3033:16;3030:25;3027:112;;;3058:79;;:::i;:::-;3027:112;3148:54;3195:6;3190:3;3185;3148:54;:::i;:::-;2867:341;2783:425;;;;;:::o;3228:340::-;3284:5;3333:3;3326:4;3318:6;3314:17;3310:27;3300:122;;3341:79;;:::i;:::-;3300:122;3458:6;3445:20;3483:79;3558:3;3550:6;3543:4;3535:6;3531:17;3483:79;:::i;:::-;3474:88;;3290:278;3228:340;;;;:::o;3574:509::-;3643:6;3692:2;3680:9;3671:7;3667:23;3663:32;3660:119;;;3698:79;;:::i;:::-;3660:119;3846:1;3835:9;3831:17;3818:31;3876:18;3868:6;3865:30;3862:117;;;3898:79;;:::i;:::-;3862:117;4003:63;4058:7;4049:6;4038:9;4034:22;4003:63;:::i;:::-;3993:73;;3789:287;3574:509;;;;:::o;4089:128::-;4126:7;4166:44;4159:5;4155:56;4144:67;;4089:128;;;:::o;4223:122::-;4296:24;4314:5;4296:24;:::i;:::-;4289:5;4286:35;4276:63;;4335:1;4332;4325:12;4276:63;4223:122;:::o;4351:181::-;4397:5;4435:6;4422:20;4413:29;;4451:33;4478:5;4451:33;:::i;:::-;4502:24;4520:5;4502:24;:::i;:::-;4493:33;;4351:181;;;;:::o;4538:329::-;4597:6;4646:2;4634:9;4625:7;4621:23;4617:32;4614:119;;;4652:79;;:::i;:::-;4614:119;4772:1;4797:53;4842:7;4833:6;4822:9;4818:22;4797:53;:::i;:::-;4787:63;;4743:117;4538:329;;;;:::o;4873:90::-;4907:7;4950:5;4943:13;4936:21;4925:32;;4873:90;;;:::o;4969:109::-;5050:21;5065:5;5050:21;:::i;:::-;5045:3;5038:34;4969:109;;:::o;5084:210::-;5171:4;5209:2;5198:9;5194:18;5186:26;;5222:65;5284:1;5273:9;5269:17;5260:6;5222:65;:::i;:::-;5084:210;;;;:::o;5300:99::-;5352:6;5386:5;5380:12;5370:22;;5300:99;;;:::o;5405:169::-;5489:11;5523:6;5518:3;5511:19;5563:4;5558:3;5554:14;5539:29;;5405:169;;;;:::o;5580:246::-;5661:1;5671:113;5685:6;5682:1;5679:13;5671:113;;;5770:1;5765:3;5761:11;5755:18;5751:1;5746:3;5742:11;5735:39;5707:2;5704:1;5700:10;5695:15;;5671:113;;;5818:1;5809:6;5804:3;5800:16;5793:27;5642:184;5580:246;;;:::o;5832:377::-;5920:3;5948:39;5981:5;5948:39;:::i;:::-;6003:71;6067:6;6062:3;6003:71;:::i;:::-;5996:78;;6083:65;6141:6;6136:3;6129:4;6122:5;6118:16;6083:65;:::i;:::-;6173:29;6195:6;6173:29;:::i;:::-;6168:3;6164:39;6157:46;;5924:285;5832:377;;;;:::o;6215:313::-;6328:4;6366:2;6355:9;6351:18;6343:26;;6415:9;6409:4;6405:20;6401:1;6390:9;6386:17;6379:47;6443:78;6516:4;6507:6;6443:78;:::i;:::-;6435:86;;6215:313;;;;:::o;6534:163::-;6674:15;6670:1;6662:6;6658:14;6651:39;6534:163;:::o;6703:366::-;6845:3;6866:67;6930:2;6925:3;6866:67;:::i;:::-;6859:74;;6942:93;7031:3;6942:93;:::i;:::-;7060:2;7055:3;7051:12;7044:19;;6703:366;;;:::o;7075:419::-;7241:4;7279:2;7268:9;7264:18;7256:26;;7328:9;7322:4;7318:20;7314:1;7303:9;7299:17;7292:47;7356:131;7482:4;7356:131;:::i;:::-;7348:139;;7075:419;;;:::o;7500:147::-;7601:11;7638:3;7623:18;;7500:147;;;;:::o;7653:114::-;;:::o;7773:398::-;7932:3;7953:83;8034:1;8029:3;7953:83;:::i;:::-;7946:90;;8045:93;8134:3;8045:93;:::i;:::-;8163:1;8158:3;8154:11;8147:18;;7773:398;;;:::o;8177:379::-;8361:3;8383:147;8526:3;8383:147;:::i;:::-;8376:154;;8547:3;8540:10;;8177:379;;;:::o;8562:170::-;8702:22;8698:1;8690:6;8686:14;8679:46;8562:170;:::o;8738:366::-;8880:3;8901:67;8965:2;8960:3;8901:67;:::i;:::-;8894:74;;8977:93;9066:3;8977:93;:::i;:::-;9095:2;9090:3;9086:12;9079:19;;8738:366;;;:::o;9110:419::-;9276:4;9314:2;9303:9;9299:18;9291:26;;9363:9;9357:4;9353:20;9349:1;9338:9;9334:17;9327:47;9391:131;9517:4;9391:131;:::i;:::-;9383:139;;9110:419;;;:::o;9535:180::-;9583:77;9580:1;9573:88;9680:4;9677:1;9670:15;9704:4;9701:1;9694:15;9721:320;9765:6;9802:1;9796:4;9792:12;9782:22;;9849:1;9843:4;9839:12;9870:18;9860:81;;9926:4;9918:6;9914:17;9904:27;;9860:81;9988:2;9980:6;9977:14;9957:18;9954:38;9951:84;;10007:18;;:::i;:::-;9951:84;9772:269;9721:320;;;:::o;10047:141::-;10096:4;10119:3;10111:11;;10142:3;10139:1;10132:14;10176:4;10173:1;10163:18;10155:26;;10047:141;;;:::o;10194:93::-;10231:6;10278:2;10273;10266:5;10262:14;10258:23;10248:33;;10194:93;;;:::o;10293:107::-;10337:8;10387:5;10381:4;10377:16;10356:37;;10293:107;;;;:::o;10406:393::-;10475:6;10525:1;10513:10;10509:18;10548:97;10578:66;10567:9;10548:97;:::i;:::-;10666:39;10696:8;10685:9;10666:39;:::i;:::-;10654:51;;10738:4;10734:9;10727:5;10723:21;10714:30;;10787:4;10777:8;10773:19;10766:5;10763:30;10753:40;;10482:317;;10406:393;;;;;:::o;10805:60::-;10833:3;10854:5;10847:12;;10805:60;;;:::o;10871:142::-;10921:9;10954:53;10972:34;10981:24;10999:5;10981:24;:::i;:::-;10972:34;:::i;:::-;10954:53;:::i;:::-;10941:66;;10871:142;;;:::o;11019:75::-;11062:3;11083:5;11076:12;;11019:75;;;:::o;11100:269::-;11210:39;11241:7;11210:39;:::i;:::-;11271:91;11320:41;11344:16;11320:41;:::i;:::-;11312:6;11305:4;11299:11;11271:91;:::i;:::-;11265:4;11258:105;11176:193;11100:269;;;:::o;11375:73::-;11420:3;11375:73;:::o;11454:189::-;11531:32;;:::i;:::-;11572:65;11630:6;11622;11616:4;11572:65;:::i;:::-;11507:136;11454:189;;:::o;11649:186::-;11709:120;11726:3;11719:5;11716:14;11709:120;;;11780:39;11817:1;11810:5;11780:39;:::i;:::-;11753:1;11746:5;11742:13;11733:22;;11709:120;;;11649:186;;:::o;11841:543::-;11942:2;11937:3;11934:11;11931:446;;;11976:38;12008:5;11976:38;:::i;:::-;12060:29;12078:10;12060:29;:::i;:::-;12050:8;12046:44;12243:2;12231:10;12228:18;12225:49;;;12264:8;12249:23;;12225:49;12287:80;12343:22;12361:3;12343:22;:::i;:::-;12333:8;12329:37;12316:11;12287:80;:::i;:::-;11946:431;;11931:446;11841:543;;;:::o;12390:117::-;12444:8;12494:5;12488:4;12484:16;12463:37;;12390:117;;;;:::o;12513:169::-;12557:6;12590:51;12638:1;12634:6;12626:5;12623:1;12619:13;12590:51;:::i;:::-;12586:56;12671:4;12665;12661:15;12651:25;;12564:118;12513:169;;;;:::o;12687:295::-;12763:4;12909:29;12934:3;12928:4;12909:29;:::i;:::-;12901:37;;12971:3;12968:1;12964:11;12958:4;12955:21;12947:29;;12687:295;;;;:::o;12987:1395::-;13104:37;13137:3;13104:37;:::i;:::-;13206:18;13198:6;13195:30;13192:56;;;13228:18;;:::i;:::-;13192:56;13272:38;13304:4;13298:11;13272:38;:::i;:::-;13357:67;13417:6;13409;13403:4;13357:67;:::i;:::-;13451:1;13475:4;13462:17;;13507:2;13499:6;13496:14;13524:1;13519:618;;;;14181:1;14198:6;14195:77;;;14247:9;14242:3;14238:19;14232:26;14223:35;;14195:77;14298:67;14358:6;14351:5;14298:67;:::i;:::-;14292:4;14285:81;14154:222;13489:887;;13519:618;13571:4;13567:9;13559:6;13555:22;13605:37;13637:4;13605:37;:::i;:::-;13664:1;13678:208;13692:7;13689:1;13686:14;13678:208;;;13771:9;13766:3;13762:19;13756:26;13748:6;13741:42;13822:1;13814:6;13810:14;13800:24;;13869:2;13858:9;13854:18;13841:31;;13715:4;13712:1;13708:12;13703:17;;13678:208;;;13914:6;13905:7;13902:19;13899:179;;;13972:9;13967:3;13963:19;13957:26;14015:48;14057:4;14049:6;14045:17;14034:9;14015:48;:::i;:::-;14007:6;14000:64;13922:156;13899:179;14124:1;14120;14112:6;14108:14;14104:22;14098:4;14091:36;13526:611;;;13489:887;;13079:1303;;;12987:1395;;:::o;14388:180::-;14436:77;14433:1;14426:88;14533:4;14530:1;14523:15;14557:4;14554:1;14547:15;14574:191;14614:3;14633:20;14651:1;14633:20;:::i;:::-;14628:25;;14667:20;14685:1;14667:20;:::i;:::-;14662:25;;14710:1;14707;14703:9;14696:16;;14731:3;14728:1;14725:10;14722:36;;;14738:18;;:::i;:::-;14722:36;14574:191;;;;:::o;14771:521::-;14934:4;14972:2;14961:9;14957:18;14949:26;;15021:9;15015:4;15011:20;15007:1;14996:9;14992:17;14985:47;15049:78;15122:4;15113:6;15049:78;:::i;:::-;15041:86;;15137:66;15199:2;15188:9;15184:18;15175:6;15137:66;:::i;:::-;15213:72;15281:2;15270:9;15266:18;15257:6;15213:72;:::i;:::-;14771:521;;;;;;:::o;15298:624::-;15487:4;15525:2;15514:9;15510:18;15502:26;;15574:9;15568:4;15564:20;15560:1;15549:9;15545:17;15538:47;15602:78;15675:4;15666:6;15602:78;:::i;:::-;15594:86;;15727:9;15721:4;15717:20;15712:2;15701:9;15697:18;15690:48;15755:78;15828:4;15819:6;15755:78;:::i;:::-;15747:86;;15843:72;15911:2;15900:9;15896:18;15887:6;15843:72;:::i;:::-;15298:624;;;;;;:::o;15928:180::-;15976:77;15973:1;15966:88;16073:4;16070:1;16063:15;16097:4;16094:1;16087:15",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\n// Useful for debugging. Remove when deploying to a live network.\nimport \"hardhat/console.sol\";\n\n// Use openzeppelin to inherit battle-tested implementations (ERC20, ERC721, etc)\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * A smart contract that allows changing a state variable of the contract and tracking the changes\n * It also allows the owner to withdraw the Ether in the contract\n * @author BuidlGuidl\n */\ncontract YourContract {\n    // State Variables\n    address public immutable owner;\n    string public greeting = \"Building Unstoppable Apps!!!\";\n    bool public premium = false;\n    uint256 public totalCounter = 0;\n    mapping(address => uint) public userGreetingCounter;\n\n    // Events: a way to emit log statements from smart contract that can be listened to by external parties\n    event GreetingChange(address indexed greetingSetter, string newGreeting, bool premium, uint256 value);\n\n    // Constructor: Called once on contract deployment\n    // Check packages/hardhat/deploy/00_deploy_your_contract.ts\n    constructor(address _owner) {\n        owner = _owner;\n    }\n\n    // Modifier: used to define a set of rules that must be met before or after a function is executed\n    // Check the withdraw() function\n    modifier isOwner() {\n        // msg.sender: predefined variable that represents address of the account that called the current function\n        require(msg.sender == owner, \"Not the Owner\");\n        _;\n    }\n\n    /**\n     * Function that allows anyone to change the state variable \"greeting\" of the contract and increase the counters\n     *\n     * @param _newGreeting (string memory) - new greeting to save on the contract\n     */\n    function setGreeting(string memory _newGreeting) public payable {\n        // Print data to the hardhat chain console. Remove when deploying to a live network.\n        console.log(\"Setting new greeting '%s' from %s\", _newGreeting, msg.sender);\n\n        // Change state variables\n        greeting = _newGreeting;\n        totalCounter += 1;\n        userGreetingCounter[msg.sender] += 1;\n\n        // msg.value: built-in global variable that represents the amount of ether sent with the transaction\n        if (msg.value > 0) {\n            premium = true;\n        } else {\n            premium = false;\n        }\n\n        // emit: keyword used to trigger an event\n        emit GreetingChange(msg.sender, _newGreeting, msg.value > 0, msg.value);\n    }\n\n    /**\n     * Function that allows the owner to withdraw all the Ether in the contract\n     * The function can only be called by the owner of the contract as defined by the isOwner modifier\n     */\n    function withdraw() public isOwner {\n        (bool success, ) = owner.call{ value: address(this).balance }(\"\");\n        require(success, \"Failed to send Ether\");\n    }\n\n    /**\n     * Function that allows the contract to receive ETH\n     */\n    receive() external payable {}\n}\n",
  "sourcePath": "contracts/YourContract.sol",
  "ast": {
    "absolutePath": "contracts/YourContract.sol",
    "exportedSymbols": {
      "YourContract": [
        172
      ],
      "console": [
        8257
      ]
    },
    "id": 173,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:31:1"
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 35,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 173,
        "sourceUnit": 8258,
        "src": "130:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "YourContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36,
          "nodeType": "StructuredDocumentation",
          "src": "300:194:1",
          "text": " A smart contract that allows changing a state variable of the contract and tracking the changes\n It also allows the owner to withdraw the Ether in the contract\n @author BuidlGuidl"
        },
        "fullyImplemented": true,
        "id": 172,
        "internalFunctionIDs": {
          "188": 1
        },
        "linearizedBaseContracts": [
          172
        ],
        "name": "YourContract",
        "nameLocation": "504:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 38,
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "571:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "546:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ef690cc0",
            "id": 41,
            "mutability": "mutable",
            "name": "greeting",
            "nameLocation": "596:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "582:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "582:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4275696c64696e6720556e73746f707061626c652041707073212121",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "607:30:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_fc2e1998e4fabd980b592d3f2694fda3ebc824815a4fa29092582e825411fd0a",
                "typeString": "literal_string \"Building Unstoppable Apps!!!\""
              },
              "value": "Building Unstoppable Apps!!!"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e0a73a93",
            "id": 44,
            "mutability": "mutable",
            "name": "premium",
            "nameLocation": "655:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "643:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 42,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "643:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "665:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "97feba9d",
            "id": 47,
            "mutability": "mutable",
            "name": "totalCounter",
            "nameLocation": "691:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "676:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "676:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "706:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cea49c3c",
            "id": 51,
            "mutability": "mutable",
            "name": "userGreetingCounter",
            "nameLocation": "745:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "713:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 50,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 48,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "721:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "713:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 49,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "732:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad",
            "id": 61,
            "name": "GreetingChange",
            "nameLocation": "885:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "greetingSetter",
                  "nameLocation": "916:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "900:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newGreeting",
                  "nameLocation": "939:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "932:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "957:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "952:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "974:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "966:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "899:81:1"
            },
            "src": "879:102:1"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1134:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1144:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1152:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1144:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:14:1"
                }
              ]
            },
            "id": 71,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1126:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1118:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1117:16:1"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:1"
            },
            "scope": 172,
            "src": "1106:59:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1330:188:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1463:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1467:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1463:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 76,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1477:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1463:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420746865204f776e6572",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1484:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40a6e638be01f825c07dc35def777dfc4285b31db2d1f792b6db28a04444532b",
                          "typeString": "literal_string \"Not the Owner\""
                        },
                        "value": "Not the Owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40a6e638be01f825c07dc35def777dfc4285b31db2d1f792b6db28a04444532b",
                          "typeString": "literal_string \"Not the Owner\""
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1455:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1455:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:45:1"
                },
                {
                  "id": 81,
                  "nodeType": "PlaceholderStatement",
                  "src": "1510:1:1"
                }
              ]
            },
            "id": 83,
            "name": "isOwner",
            "nameLocation": "1320:7:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:2:1"
            },
            "src": "1311:207:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1810:680:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53657474696e67206e6577206772656574696e6720272573272066726f6d202573",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1925:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e5e1801a562e1900b3021be50d10058f907c5e47ea2d87d1228449793b51aa",
                          "typeString": "literal_string \"Setting new greeting '%s' from %s\""
                        },
                        "value": "Setting new greeting '%s' from %s"
                      },
                      {
                        "id": 93,
                        "name": "_newGreeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1962:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 94,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1976:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1980:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1976:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b4e5e1801a562e1900b3021be50d10058f907c5e47ea2d87d1228449793b51aa",
                          "typeString": "literal_string \"Setting new greeting '%s' from %s\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8257,
                        "src": "1913:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8257_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1921:3:1",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1568,
                      "src": "1913:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1913:74:1"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98,
                      "name": "greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2032:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99,
                      "name": "_newGreeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2043:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2032:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:23:1"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "totalCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2065:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2081:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2065:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:17:1"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 106,
                        "name": "userGreetingCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2092:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2112:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2116:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2112:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2092:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2127:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2092:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:36:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 113,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2252:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2256:5:1",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2252:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2264:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2252:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 126,
                    "nodeType": "Block",
                    "src": "2312:40:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 122,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2326:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2336:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2326:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "2326:15:1"
                      }
                    ]
                  },
                  "id": 127,
                  "nodeType": "IfStatement",
                  "src": "2248:104:1",
                  "trueBody": {
                    "id": 121,
                    "nodeType": "Block",
                    "src": "2267:39:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 117,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2281:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2291:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2281:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "2281:14:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 129,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2432:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2436:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2432:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 131,
                        "name": "_newGreeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2444:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2458:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2462:5:1",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2458:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2470:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2458:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2473:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2477:5:1",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2473:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 128,
                      "name": "GreetingChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2417:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,bool,uint256)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "EmitStatement",
                  "src": "2412:71:1"
                }
              ]
            },
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "1524:217:1",
              "text": " Function that allows anyone to change the state variable \"greeting\" of the contract and increase the counters\n @param _newGreeting (string memory) - new greeting to save on the contract"
            },
            "functionSelector": "a4136862",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGreeting",
            "nameLocation": "1755:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_newGreeting",
                  "nameLocation": "1781:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1767:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1766:28:1"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:0:1"
            },
            "scope": 172,
            "src": "1746:744:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "2730:132:1",
              "statements": [
                {
                  "assignments": [
                    148,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2746:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 165,
                      "src": "2741:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2741:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 159,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2802:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 149,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2759:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2765:4:1",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2759:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 153,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2786:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_YourContract_$172",
                                  "typeString": "contract YourContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_YourContract_$172",
                                  "typeString": "contract YourContract"
                                }
                              ],
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2778:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 151,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2778:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2778:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2792:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2778:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2759:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2740:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 161,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "2823:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2832:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2815:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:40:1"
                }
              ]
            },
            "documentation": {
              "id": 142,
              "nodeType": "StructuredDocumentation",
              "src": "2496:194:1",
              "text": " Function that allows the owner to withdraw all the Ether in the contract\n The function can only be called by the owner of the contract as defined by the isOwner modifier"
            },
            "functionSelector": "3ccfd60b",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 144,
                  "name": "isOwner",
                  "nameLocations": [
                    "2722:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 83,
                  "src": "2722:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2722:7:1"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2704:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2712:2:1"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2730:0:1"
            },
            "scope": 172,
            "src": "2695:167:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2967:2:1",
              "statements": []
            },
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "2868:67:1",
              "text": " Function that allows the contract to receive ETH"
            },
            "id": 171,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2947:2:1"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:0:1"
            },
            "scope": 172,
            "src": "2940:29:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 173,
        "src": "495:2476:1",
        "usedErrors": [],
        "usedEvents": [
          61
        ]
      }
    ],
    "src": "31:2941:1"
  },
  "legacyAST": {
    "absolutePath": "contracts/YourContract.sol",
    "exportedSymbols": {
      "YourContract": [
        172
      ],
      "console": [
        8257
      ]
    },
    "id": 173,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:31:1"
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 35,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 173,
        "sourceUnit": 8258,
        "src": "130:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "YourContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36,
          "nodeType": "StructuredDocumentation",
          "src": "300:194:1",
          "text": " A smart contract that allows changing a state variable of the contract and tracking the changes\n It also allows the owner to withdraw the Ether in the contract\n @author BuidlGuidl"
        },
        "fullyImplemented": true,
        "id": 172,
        "internalFunctionIDs": {
          "188": 1
        },
        "linearizedBaseContracts": [
          172
        ],
        "name": "YourContract",
        "nameLocation": "504:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 38,
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "571:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "546:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ef690cc0",
            "id": 41,
            "mutability": "mutable",
            "name": "greeting",
            "nameLocation": "596:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "582:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "582:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4275696c64696e6720556e73746f707061626c652041707073212121",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "607:30:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_fc2e1998e4fabd980b592d3f2694fda3ebc824815a4fa29092582e825411fd0a",
                "typeString": "literal_string \"Building Unstoppable Apps!!!\""
              },
              "value": "Building Unstoppable Apps!!!"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e0a73a93",
            "id": 44,
            "mutability": "mutable",
            "name": "premium",
            "nameLocation": "655:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "643:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 42,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "643:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "665:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "97feba9d",
            "id": 47,
            "mutability": "mutable",
            "name": "totalCounter",
            "nameLocation": "691:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "676:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "676:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "706:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cea49c3c",
            "id": 51,
            "mutability": "mutable",
            "name": "userGreetingCounter",
            "nameLocation": "745:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 172,
            "src": "713:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 50,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 48,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "721:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "713:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 49,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "732:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad",
            "id": 61,
            "name": "GreetingChange",
            "nameLocation": "885:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "greetingSetter",
                  "nameLocation": "916:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "900:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newGreeting",
                  "nameLocation": "939:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "932:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "premium",
                  "nameLocation": "957:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "952:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "974:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "966:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "899:81:1"
            },
            "src": "879:102:1"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1134:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1144:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1152:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1144:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:14:1"
                }
              ]
            },
            "id": 71,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1126:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1118:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1117:16:1"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:1"
            },
            "scope": 172,
            "src": "1106:59:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1330:188:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1463:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1467:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1463:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 76,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1477:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1463:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420746865204f776e6572",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1484:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40a6e638be01f825c07dc35def777dfc4285b31db2d1f792b6db28a04444532b",
                          "typeString": "literal_string \"Not the Owner\""
                        },
                        "value": "Not the Owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40a6e638be01f825c07dc35def777dfc4285b31db2d1f792b6db28a04444532b",
                          "typeString": "literal_string \"Not the Owner\""
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1455:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1455:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:45:1"
                },
                {
                  "id": 81,
                  "nodeType": "PlaceholderStatement",
                  "src": "1510:1:1"
                }
              ]
            },
            "id": 83,
            "name": "isOwner",
            "nameLocation": "1320:7:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:2:1"
            },
            "src": "1311:207:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1810:680:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53657474696e67206e6577206772656574696e6720272573272066726f6d202573",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1925:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4e5e1801a562e1900b3021be50d10058f907c5e47ea2d87d1228449793b51aa",
                          "typeString": "literal_string \"Setting new greeting '%s' from %s\""
                        },
                        "value": "Setting new greeting '%s' from %s"
                      },
                      {
                        "id": 93,
                        "name": "_newGreeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1962:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 94,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1976:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1980:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1976:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b4e5e1801a562e1900b3021be50d10058f907c5e47ea2d87d1228449793b51aa",
                          "typeString": "literal_string \"Setting new greeting '%s' from %s\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8257,
                        "src": "1913:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8257_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1921:3:1",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1568,
                      "src": "1913:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1913:74:1"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 98,
                      "name": "greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2032:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99,
                      "name": "_newGreeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2043:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2032:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:23:1"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "totalCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2065:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2081:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2065:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:17:1"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 106,
                        "name": "userGreetingCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "2092:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 109,
                      "indexExpression": {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2112:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2116:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2112:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2092:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2127:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2092:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:36:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 113,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2252:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2256:5:1",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2252:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2264:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2252:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 126,
                    "nodeType": "Block",
                    "src": "2312:40:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 122,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2326:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2336:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2326:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "2326:15:1"
                      }
                    ]
                  },
                  "id": 127,
                  "nodeType": "IfStatement",
                  "src": "2248:104:1",
                  "trueBody": {
                    "id": 121,
                    "nodeType": "Block",
                    "src": "2267:39:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 117,
                            "name": "premium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2281:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2291:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2281:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "2281:14:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 129,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2432:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2436:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2432:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 131,
                        "name": "_newGreeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2444:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2458:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2462:5:1",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2458:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2470:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2458:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2473:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2477:5:1",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2473:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 128,
                      "name": "GreetingChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2417:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,bool,uint256)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "EmitStatement",
                  "src": "2412:71:1"
                }
              ]
            },
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "1524:217:1",
              "text": " Function that allows anyone to change the state variable \"greeting\" of the contract and increase the counters\n @param _newGreeting (string memory) - new greeting to save on the contract"
            },
            "functionSelector": "a4136862",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGreeting",
            "nameLocation": "1755:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_newGreeting",
                  "nameLocation": "1781:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1767:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1766:28:1"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:0:1"
            },
            "scope": 172,
            "src": "1746:744:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "2730:132:1",
              "statements": [
                {
                  "assignments": [
                    148,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2746:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 165,
                      "src": "2741:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2741:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 159,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2802:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 149,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2759:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2765:4:1",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2759:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 153,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2786:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_YourContract_$172",
                                  "typeString": "contract YourContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_YourContract_$172",
                                  "typeString": "contract YourContract"
                                }
                              ],
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2778:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 151,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2778:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2778:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2792:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2778:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2759:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2740:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 161,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "2823:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2832:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2815:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:40:1"
                }
              ]
            },
            "documentation": {
              "id": 142,
              "nodeType": "StructuredDocumentation",
              "src": "2496:194:1",
              "text": " Function that allows the owner to withdraw all the Ether in the contract\n The function can only be called by the owner of the contract as defined by the isOwner modifier"
            },
            "functionSelector": "3ccfd60b",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 144,
                  "name": "isOwner",
                  "nameLocations": [
                    "2722:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 83,
                  "src": "2722:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2722:7:1"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2704:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2712:2:1"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2730:0:1"
            },
            "scope": 172,
            "src": "2695:167:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2967:2:1",
              "statements": []
            },
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "2868:67:1",
              "text": " Function that allows the contract to receive ETH"
            },
            "id": 171,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2947:2:1"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:0:1"
            },
            "scope": 172,
            "src": "2940:29:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 173,
        "src": "495:2476:1",
        "usedErrors": [],
        "usedEvents": [
          61
        ]
      }
    ],
    "src": "31:2941:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.5f1834bc.Emscripten.clang"
  },
  "networks": {
    "2": {
      "events": {},
      "links": {},
      "address": "41920f3c5d6543f56115f925135bbe46cb8a4a17d1",
      "transactionHash": "b3a6cbec67ad09e2128e1430fee95998d89bfb7919b1ac280c3dc2eb5c0edce1"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2025-07-17T13:01:20.054Z"
}